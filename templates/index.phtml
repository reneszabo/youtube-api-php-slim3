<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <title>Slim 3</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-jsonview/1.2.3/jquery.jsonview.css" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.6/components/sidebar.min.css" />
  <style>
    html, body, #main, .embed-responsive, iframe {
      height: 100vh;
    }
    .embed-responsive{
      padding-bottom: 0; /* REMOVE SCROLL DOWN */
    }
    .menu-btn{
      width: 20px;
      height: 20px;
      background: red;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2;
    }
    .menu{
      background: linear-gradient(to bottom, rgba(0,0,0,0.85) 20%, rgba(0,0,0,0.75) 100%, transparent);
      display: flex;
      flex-direction: column;
    }
    .ui[class*="very wide"]{
      /*width: 100vw !important;*/
    }
    .span-title{
      color: white;
    }
    .side-header{
      order:1;
      height: 59px;
      position: relative;
      background: yellow;

    }
    .side-content{
      background: blue;
      order:2;
      position: relative;
      overflow-x: hidden;
      overflow-y: scroll;
      height: 100%;
    }
    .side-footer{
      background: red;
      order:3;
      position: relative;
      height: 59px;
    }
  </style>
</head>
<body>


<aside class="ui right very wide  vertical menu sidebar">
  <div class="side-header">
    <input type="text" class="input-search " /> <button type="button" class="btn-search ">search</button>
  </div>
  <div class="side-content">
    <div id="youtube-results"></div>
  </div>
  <div class="side-footer">
  </div>
</aside>
<main id="main" class="pusher dimmed" >
  <div class="embed-responsive embed-responsive-16by9">
    <div id="player"></div>
  </div>
</main>
<div class="menu-btn">
</div>
<div id="partials" class="hide">
  <div class="youtube-action container-fluid">
    <div class="row">
      <div class="col-xs-4">
        <img src="" class="img-thumb img-responsive"/>
      </div>
      <div class="col-xs-8">
        <p class="span-title"> some title</p>
        <p><span class="span-time label label-default">0</span> </p>
        <p>
          <button class="btn btn-default btn-play" type="button" data-id=""> play </button>
        </p>
      </div>
    </div>
  </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.2/lodash.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.6/components/sidebar.js"></script>

<script>
  $('.ui.sidebar').sidebar({
    // Overlay will mean the sidebar sits on top of your content
    transition: 'overlay',
    onVisible: function(){
      console.log('Visible');
    },
    onHide: function(){
      console.log('Hide');
    }
  });


  $(document).on('click', '.menu-btn',function(){
    $('.ui.sidebar')
      .sidebar('toggle');
  });

  var videosArray;
  var searchForString = "";

  $(document).on('click','.btn-search'  , searchInputVideo);
  $(document).on('click','.btn-play'    , playVideo);
  function playVideo(){
    var code = $(this).attr('data-id');
    done = false;
    player.loadVideoById(code);
  }
  function searchInputVideo(e){
    videosArray = [];
    searchVideo( $('.input-search').val());
    $('.input-search').val('');
  }
  function searchVideo(search){
    searchForString = search;
    var request  = $.ajax({
      url: './api/youtube/search',
      data: { q: searchForString }
    });
    request.done(function (data, textStatus, jqXHR ) {
      renderVideoList(data.items);
//      setNextPageButton(data.nextPageToken);
    });
    request.fail(function (jqXHR, textStatus, errorThrown) {

    });
    request.always(function( data, textStatus, jqXHR ) {

    });
  }

  function searchVideoNextPage(pageId){
    var request  = $.ajax({
      url: './api/youtube/search/page',
      data: {
        pageToken: pageId,
        q: searchForString
      }
    });
    request.done(function (data, textStatus, jqXHR ) {
      renderVideoList(data.items);
//      setNextPageButton(data.nextPageToken);
    });
    request.fail(function (jqXHR, textStatus, errorThrown) {

    });
    request.always(function( data, textStatus, jqXHR ) {

    });
  }
  function searchVideoInfo(videoId,$objView){
    var request  = $.ajax({
      url: './api/youtube/search/video',
      data: {
        ids: videoId,
      }
    });
    request.done(function (data, textStatus, jqXHR ) {
      var reptms = /^PT(?:(\d+)H)?(?:(\d+)M)?(?:(\d+)S)?$/;
      var hours = 0, minutes = 0, seconds = 0, totalseconds;
      console.log(data);
      if (reptms.test(data.items[0].contentDetails.duration)) {
        var matches = reptms.exec(data.items[0].contentDetails.duration);
        if (matches[1]) hours = Number(matches[1]);
        if (matches[2]) minutes = Number(matches[2]);
        if (matches[3]) seconds = Number(matches[3]);
        totalseconds = hours * 3600  + minutes * 60 + seconds;
//        $objView.find('.span-time').html(totalseconds + " sec");
        if(totalseconds>20){
          _.remove(videosArray, function(o) { return o.id.videoId == videoId; });
        }else{
          var $partial = $('#partials .youtube-action').clone();
          $partial.find('button').attr('data-id',data.items[0].id);
          $partial.find('.span-title').html(data.items[0].snippet.title);
          $partial.find('.img-thumb').attr('src',data.items[0].snippet.thumbnails.high.url);
          $partial.find('.span-time').html(totalseconds + " sec");
          $('#youtube-results').append($partial);
        }
      }

    });
    request.fail(function (jqXHR, textStatus, errorThrown) {

    });
    request.always(function( data, textStatus, jqXHR ) {

    });
  }

  function nextPageBtn(e){
    searchVideoNextPage($(this).attr('data-id'));
  }


  function setNextPageButton(pageHash){
    $('#btn-next-youtube-results').attr('data-id', pageHash);
    $('#btn-next-youtube-results').removeClass('hide');

  }

  function renderVideoList(items){
    console.log(items.length);
    if(items.length > 0){
//      $('#btn-next-youtube-results').removeClass('hidden');
      for(item in items){

        var o = _.find(videosArray, function(o) { return o.id.videoId == items[item].id.videoId; })
        if(o == undefined ){
          videosArray.push(items[item]);
          searchVideoInfo(items[item].id.videoId,null);
        }
      }
      $('#btn-next-youtube-results').trigger('click');
    }else{
      console.log("there");
      $('#btn-next-youtube-results').addClass('hidden');
    }
  }


  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      videoId : 'zpOULjyy-n8',
      playerVars: {
        'color': 'white', 'autoplay': 0, 'controls': 0, 'rel': 0, 'showinfo': 0
      },
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    console.log('ready to play video');
  }

  // 5. The API calls this function when the player's state changes.
  function onPlayerStateChange(event) {
    console.log('status change on video');
  }
</script>
</body>
</html>
